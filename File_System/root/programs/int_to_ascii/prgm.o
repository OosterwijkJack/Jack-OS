// Converts intiger to ascii
// r0 : Number to be converted to ascii
// r1 : value of '0' in ascii
// r2: holder for moduelo operations
// r3: int len


.data
	zero:
	.ascii "0"

.main
	movd rsp,rsb

	// call get int len stores output in r3

	movd 31231,r0

	movd r0,r1 // copy num to r1
	jmp GET_INT_LEN
	GET_INT_LEN_RET:
	sub 1,r3

	sub r3,rsp

	movb [zero],r1 // mov value of ascii zero to r0
	movd r0,r2 // for moduleo operations

	START:
	cmpd 0,r0 // jump to end if num less then zero
	jeq END

	mod 10,r2 // get last number
	add r1,r2 // convert to ascii

	// add to stack
	pushb r2
	add 1,rsp // increase rsp becuase order is reversed

	div 10,r0
	movd r0,r2

	jmp START

	END:
	// write number to screen
	sub 1,rsp
	add 1,r3
	movd rsp,rek
	movd STDOUT,rjo
	movd r3,r9
	int 1

	int 5 // exit program

	GET_INT_LEN:
	cmpd 0,r1
	jeq GET_INT_LEN_RET

	add 1,r3
	div 10,r1
	jmp GET_INT_LEN
